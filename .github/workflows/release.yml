name: Release Builds

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always
  CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

jobs:
  release-darwin:
    runs-on: macos-14

    env:
      FILE_NAME: hookman-${{ github.event.release.name }}-darwin-arm64.zip

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo registry and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run lints and formatting checks
        run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets -- -D warnings

      - name: Build release artifact
        run: cargo build --release --verbose --locked

      - name: Generate manpage
        run: cargo xtask manpage --dir man/man1

      - name: Package release
        run: |
          mkdir -p release/bin release/man/man1
          cp target/release/hookman release/bin/
          cp man/man1/hookman.1 release/man/man1/
          cp LICENSE release/
          cp README.md release/
          cd release && zip -r ../${{ env.FILE_NAME }} bin man README.md LICENSE && cd ..

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.FILE_NAME }}
          tag: ${{ github.ref }}
          overwrite: true

  release-ubuntu:
    runs-on: ubuntu-latest

    env:
      FILE_NAME: hookman-${{ github.event.release.name }}-linux-x86_64.zip

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo registry and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run lints and formatting checks
        run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets -- -D warnings

      - name: Build release artifact
        run: cargo build --release --verbose --locked

      - name: Generate manpage
        run: cargo xtask manpage --dir man/man1

      - name: Package release
        run: |
          mkdir -p release/bin release/man/man1
          cp target/release/hookman release/bin/
          cp man/man1/hookman.1 release/man/man1/
          cp LICENSE release/
          cp README.md release/
          cd release && zip -r ../${{ env.FILE_NAME }} bin man README.md LICENSE && cd ..

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.FILE_NAME }}
          tag: ${{ github.ref }}
          overwrite: true

  release-windows:
    runs-on: windows-latest

    env:
      FILE_NAME: hookman-${{ github.event.release.name }}-windows-x86_64.zip

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo registry and build
        uses: actions/cache@v3
        with:
          path: |
            %USERPROFILE%\.cargo\registry\index/
            %USERPROFILE%\.cargo\registry\cache/
            %USERPROFILE%\.cargo\git\db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run lints and formatting checks
        run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets -- -D warnings

      - name: Build release artifact
        run: cargo build --release --verbose --locked

      - name: Generate manpage
        run: cargo xtask manpage --dir man/man1

      - name: Package release
        shell: powershell
        run: |
          mkdir release\bin
          mkdir release\man\man1
          copy target\release\hookman.exe release\bin\
          copy man\man1\hookman.1 release\man\man1\
          copy LICENSE release\
          copy README.md release\
          Compress-Archive -Path release\* -DestinationPath $Env:FILE_NAME

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.FILE_NAME }}
          tag: ${{ github.ref }}
          overwrite: true

  publish-crates:
    needs:
      - release-darwin
      - release-ubuntu
      - release-windows
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Prepare Crates.io README
        run: sed -i '/^>/d' README.md
      - name: Publish to crates.io
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
        run: cargo publish --token $CRATES_TOKEN --allow-dirty
